class Solution {
    func isMatch(_ s: String, _ p: String) -> Bool {
        var starIndex = -1
        var pIndex = 0
        var sIndex = 0
        var match = 0
        
        while sIndex < s.characters.count {
            if pIndex < p.characters.count && (p[pIndex] == "?" || p[pIndex] == s[sIndex]) {
                sIndex += 1
                pIndex += 1
            } else if pIndex < p.characters.count && p[pIndex] == "*"{
                starIndex = pIndex
                match = sIndex
                pIndex += 1
            } else if starIndex != -1 {        //go back to the star * position and iterate again
                pIndex = starIndex + 1
                match += 1
                sIndex = match
            } else {
                return false
            }
        }
        
        while pIndex < p.characters.count && p[pIndex] == "*" {
            pIndex += 1
        }
        
        return pIndex == p.characters.count
    }
}

private extension String {
    subscript(index: Int) -> Character {
        return self[self.characters.index(self.startIndex, offsetBy: index)]
    }
}
