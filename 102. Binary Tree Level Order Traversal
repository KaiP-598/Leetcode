/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public var val: Int
 *     public var left: TreeNode?
 *     public var right: TreeNode?
 *     public init(_ val: Int) {
 *         self.val = val
 *         self.left = nil
 *         self.right = nil
 *     }
 * }
 */
class Solution {
    func levelOrder(_ root: TreeNode?) -> [[Int]] {
        var res = [[Int]]()
        var queue = [TreeNode]()
        guard let node = root else {
            return res
        }
        queue.append(node)
        
        while queue.count > 0 {
            let size = queue.count
            var level = [Int]()
            for _ in 0 ..< size {
                let first = queue[0]
                queue.remove(at:0)
                
                level.append(first.val)
                if first.left != nil {
                    queue.append(first.left!)
                }
                if first.right != nil {
                    queue.append(first.right!)
                }

            }
            
            res.append(level)

        }
        
                    
       return res
    }
}
