/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init(_ val: Int) {
 *         self.val = val
 *         self.next = nil
 *     }
 * }
 */
class Solution {
    func removeNthFromEnd(_ head: ListNode?, _ n: Int) -> ListNode? {
        let dummyHead : ListNode = ListNode(0)
        dummyHead.next = head
        
        var fast: ListNode? = dummyHead
        var slow: ListNode? = dummyHead
        var steps = n
        while steps > 0 {
            fast = fast?.next
            steps -= 1
        }
        
        while fast?.next != nil {
            fast = fast?.next
            slow = slow?.next
        }
        slow?.next = slow?.next?.next
        return dummyHead.next
    }
}
