class Solution {
    func convert(_ s: String, _ numRows: Int) -> String {
        var str  = s
        var chars = str.randomAccessCharactersArray()
        //if there is only one row or the number of rows is greater than the string length, just return the string
        if (numRows == 1) || (numRows > chars.count){
            return str
        }
        //create an array containting numRows of elements in it
        var arr = Array(repeating: String(), count: numRows)
        var index = 0
        var step = 1
        for c in chars{
            arr[index].append(String(c))
            //swap the step direction when reach to the end
            if (index == 0){
                step = 1
            } else if (index == numRows - 1){
                step = -1
            }
            //increment the index
            index += step
        }
        
        //create the result string
        var res = String()
        for item in arr{
            res += item
        }
        
        return res
    }
}


private extension String {
    func randomAccessCharactersArray() -> [Character] {
        return Array(self.characters)
    }
}
